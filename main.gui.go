// auto-generated
// Code generated by Defyne GUI builder.

package main

import (
	"fyne.io/fyne/v2"
	"fyne.io/fyne/v2/container"
	"fyne.io/fyne/v2/theme"
	"fyne.io/fyne/v2/widget"
)

type gui struct {
	distro           *widget.Label
	docker           *widget.Check
	httrack          *widget.Check
	kvm              *widget.Check
	lutris           *widget.Check
	steam            *widget.Check
	base_devel       *widget.Check
	telegram_desktop *widget.Check
	wine             *widget.Check
	bitwarden        *widget.Check
	onlyOffice       *widget.Check
	vsCode           *widget.Check
	docker_config    *widget.Check
	kvm_config       *widget.Check
	submit           *widget.Button
}

func newGUI() *gui {
	return &gui{}
}

func (g *gui) makeUI() fyne.CanvasObject {
	g.distro = widget.NewLabel("")
	g.docker_config = widget.NewCheck("Docker", func(b bool) {})
	g.docker = widget.NewCheck("Docker", func(b bool) {})
	g.httrack = widget.NewCheck("Httrack", func(b bool) {})
	g.lutris = widget.NewCheck("Lutris", func(b bool) {})
	g.steam = widget.NewCheck("Steam", func(b bool) {})
	g.telegram_desktop = widget.NewCheck("Telegram", func(b bool) {})
	g.wine = widget.NewCheck("Wine", func(b bool) {})
	g.kvm = widget.NewCheck("KVM", func(b bool) {})
	g.onlyOffice = widget.NewCheck("OnlyOffice", func(b bool) {})
	g.bitwarden = widget.NewCheck("Bitwarden", func(b bool) {})
	g.vsCode = widget.NewCheck("VsCode", func(b bool) {})
	g.base_devel = widget.NewCheck("Base-Devel", func(b bool) {})
	g.kvm_config = widget.NewCheck("KVM", func(b bool) {})
	g.submit = widget.NewButtonWithIcon("Proceed", theme.ConfirmIcon(), func() {})

	return container.NewVBox(
		widget.NewLabel("Automate your linux installs"),
		g.distro,
		widget.NewSeparator(),
		widget.NewLabel("Official Packages"),
		container.NewHBox(
			g.base_devel,
			g.docker,
			g.httrack,
			g.kvm,
			g.lutris,
			g.steam),
		container.NewHBox(
			g.telegram_desktop,
			g.wine),
		widget.NewSeparator(),
		widget.NewLabel("AUR"),
		container.NewHBox(
			widget.NewCheck("Spotify", func(b bool) {})),
		widget.NewSeparator(),
		widget.NewLabel("Flatpaks"),
		container.NewMax(
			g.bitwarden),
		widget.NewSeparator(),
		widget.NewLabel("Snaps"),
		container.NewHBox(
			g.onlyOffice,
			g.vsCode),
		widget.NewSeparator(),
		widget.NewLabel("Configurations"),
		container.NewHBox(
			g.docker_config,
			g.kvm_config),
		g.submit)
}
